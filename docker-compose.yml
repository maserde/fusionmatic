services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: fusion-host:latest
    container_name: fusion-host-app
    restart: always
    ports:
      - "${PORT:-8888}:${PORT:-8888}"
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./logs:/app/logs
    networks:
      - fusion-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').request({host: 'localhost', port: process.env.PORT || 8888, path: '/v1/health', timeout: 5000}, (res) => {process.exit(res.statusCode === 200 ? 0 : 1);}).on('error', () => {process.exit(1);}).end();"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3

  redis:
    image: redis:latest
    container_name: fusion-host-redis
    restart: always
    ports:
      - "${REDIS_HOST:-127.0.0.1}:${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - fusion-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis-data:
    driver: local

networks:
  fusion-network:
    driver: bridge